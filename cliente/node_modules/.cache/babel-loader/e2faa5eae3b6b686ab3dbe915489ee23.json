{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\mda_jcabrera\\\\Desktop\\\\graphql-servidor\\\\cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\mda_jcabrera\\\\Desktop\\\\graphql-servidor\\\\cliente\\\\src\\\\componentes\\\\NuevoCliente.js\";\nimport React, { Component, Fragment } from 'react';\nimport { NUEVO_CLIENTE } from '../mutations';\nimport { Mutation } from 'react-apollo';\n\nclass NuevoCliente extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cliente: {\n        nombre: '',\n        apellido: '',\n        empresa: '',\n        edad: '',\n        email: '',\n        tipo: ''\n      },\n      error: false,\n      emails: []\n    };\n\n    this.nuevoCampo = () => {\n      this.setState({\n        emails: this.state.emails.concat([{\n          email: ''\n        }])\n      });\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    let respuesta = error ? React.createElement(\"p\", {\n      className: \"alert alert-danger p-3 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Todos los campos son obligatorios\") : ''; // los dos puntos significa \"else\"\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Nuevo Cliente\"), respuesta, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Mutation, {\n      mutation: NUEVO_CLIENTE,\n      onCompleted: () => this.props.history.push('/') //-el onCompleted lleva a la pagina principal\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, crearCliente => React.createElement(\"form\", {\n      className: \"col-md-8 m-3\",\n      onSubmit: e => {\n        e.preventDefault(); //evitar que el formulario se envia apenas se preciona el boton, para revisar que los formularios esten correctos.\n\n        const _this$state$cliente = this.state.cliente,\n              nombre = _this$state$cliente.nombre,\n              apellido = _this$state$cliente.apellido,\n              empresa = _this$state$cliente.empresa,\n              edad = _this$state$cliente.edad,\n              email = _this$state$cliente.email,\n              tipo = _this$state$cliente.tipo;\n\n        if (nombre === '' || apellido === '' || empresa === '' || edad === '' || email === '' || tipo === '') {\n          this.setState({\n            error: true\n          });\n          return;\n        }\n\n        this.setState({\n          error: false\n        });\n        const input = {\n          nombre,\n          apellido,\n          empresa,\n          edad: Number(edad),\n          tipo,\n          email\n        };\n        crearCliente({\n          variables: {\n            input\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Nombre\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Nombre\",\n      onChange: e => {\n        this.setState({\n          cliente: _objectSpread({}, this.state.cliente, {\n            nombre: e.target.value\n          })\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Apellido\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Apellido\",\n      onChange: e => {\n        this.setState({\n          cliente: _objectSpread({}, this.state.cliente, {\n            apellido: e.target.value\n          })\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Empresa\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Empresa\",\n      onChange: e => {\n        this.setState({\n          cliente: _objectSpread({}, this.state.cliente, {\n            empresa: e.target.value\n          })\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), this.state.emails.map((input, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"form-group col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Correo: \", index + 1), React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group d-flex justify-content-center col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      onClick: this.nuevoCampo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"+ Agregar Email\")), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      onChange: e => {\n        this.setState({\n          cliente: _objectSpread({}, this.state.cliente, {\n            email: e.target.value\n          })\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Edad\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Edad\",\n      onChange: e => {\n        this.setState({\n          cliente: _objectSpread({}, this.state.cliente, {\n            edad: e.target.value\n          })\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Tipo Cliente\"), React.createElement(\"select\", {\n      onChange: e => {\n        this.setState({\n          cliente: _objectSpread({}, this.state.cliente, {\n            tipo: e.target.value\n          })\n        });\n      },\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Elegir...\"), React.createElement(\"option\", {\n      value: \"PREMIUM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"PREMIUM\"), React.createElement(\"option\", {\n      value: \"BASICO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"B\\xC1SICO\")))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Agregar Cliente\")))));\n  }\n\n}\n\nexport default NuevoCliente;","map":{"version":3,"sources":["C:\\Users\\mda_jcabrera\\Desktop\\graphql-servidor\\cliente\\src\\componentes\\NuevoCliente.js"],"names":["React","Component","Fragment","NUEVO_CLIENTE","Mutation","NuevoCliente","state","cliente","nombre","apellido","empresa","edad","email","tipo","error","emails","nuevoCampo","setState","concat","render","respuesta","props","history","push","crearCliente","e","preventDefault","input","Number","variables","target","value","map","index"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from 'react'\r\n\r\nimport {NUEVO_CLIENTE} from '../mutations';\r\nimport {Mutation} from 'react-apollo';\r\n\r\nclass NuevoCliente extends Component{\r\n    state = {\r\n        cliente:{\r\n            nombre: '',\r\n            apellido: '',\r\n            empresa: '',\r\n            edad: '',\r\n            email: '',\r\n            tipo: '' \r\n        },\r\n        error: false,\r\n        emails:[]\r\n    }\r\n\r\n    nuevoCampo = () => {\r\n        this.setState({\r\n            emails:this.state.emails.concat([{email:''}])\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        const {error} = this.state; \r\n        let respuesta =  (error) ? <p className =\"alert alert-danger p-3 text-center\">Todos los campos son obligatorios</p>:'';// los dos puntos significa \"else\"\r\n        return (\r\n            <Fragment>\r\n                <h2 className=\"text-center\">Nuevo Cliente</h2>\r\n                {respuesta}\r\n                <div className=\"row justify-content-center\">\r\n                <Mutation mutation={NUEVO_CLIENTE} onCompleted={() => this.props.history.push('/')\r\n                //-el onCompleted lleva a la pagina principal\r\n                }>\r\n                \r\n                {crearCliente => (\r\n                    <form \r\n                        className=\"col-md-8 m-3\"\r\n                        onSubmit={e=> {\r\n                            e.preventDefault();//evitar que el formulario se envia apenas se preciona el boton, para revisar que los formularios esten correctos.\r\n\r\n                            const {nombre, apellido, empresa, edad, email, tipo} = this.state.cliente;\r\n                            \r\n                            if(nombre ===''||apellido ===''||empresa ===''||edad ===''||email ===''||tipo === ''){\r\n                                this.setState({\r\n                                    error:true\r\n                                });\r\n                                return;\r\n                            }\r\n\r\n                            this.setState({\r\n                                error:false\r\n                            })\r\n\r\n                            const input = {\r\n                                nombre,\r\n                                apellido,\r\n                                empresa,\r\n                                edad: Number(edad),\r\n                                tipo,\r\n                                email\r\n                            };\r\n                            crearCliente({\r\n                                variables: {input}\r\n                            })\r\n                        }} >\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Nombre</label>\r\n                                <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Nombre\"\r\n                                onChange={e => {\r\n                                    this.setState({\r\n                                        cliente:{\r\n                                            ...this.state.cliente,\r\n                                            nombre:e.target.value\r\n                                        }\r\n                                    })\r\n                                }}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Apellido</label>\r\n                                <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Apellido\"\r\n                                onChange={e => {\r\n                                    this.setState({\r\n                                        cliente:{\r\n                                            ...this.state.cliente,\r\n                                            apellido:e.target.value\r\n                                        }\r\n                                    })\r\n                                }}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Empresa</label>\r\n                                <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Empresa\"\r\n                                onChange={e => {\r\n                                    this.setState({\r\n                                        cliente:{\r\n                                            ...this.state.cliente,\r\n                                            empresa:e.target.value\r\n                                        }\r\n                                    })\r\n                                }}/>\r\n                        </div>\r\n                        {this.state.emails.map((input, index)=> (\r\n                            <div key={index} className=\"form-group col-md-12\">\r\n                                <label>Correo: {index + 1}</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\" \r\n                                />\r\n                            </div>\r\n                        ))}\r\n                        <div className=\"form-group d-flex justify-content-center col-md-12\">\r\n                                <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-warning\" \r\n                                onClick={this.nuevoCampo}>+ Agregar Email\r\n                                </button>\r\n                        </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Email</label>\r\n                                <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Email\"\r\n                                onChange={e => {\r\n                                    this.setState({\r\n                                        cliente:{\r\n                                            ...this.state.cliente,\r\n                                            email:e.target.value\r\n                                        }\r\n                                    })\r\n                                }}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Edad</label>\r\n                                <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Edad\"\r\n                                onChange={e => {\r\n                                    this.setState({\r\n                                        cliente:{\r\n                                            ...this.state.cliente,\r\n                                            edad:e.target.value\r\n                                        }\r\n                                    })\r\n                                }}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Tipo Cliente</label>  \r\n                                <select onChange={e => {\r\n                                    this.setState({\r\n                                        cliente:{\r\n                                            ...this.state.cliente,\r\n                                            tipo:e.target.value\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                className=\"form-control\">\r\n                                    <option value=\"\">Elegir...</option>\r\n                                    <option value=\"PREMIUM\">PREMIUM</option>\r\n                                    <option value=\"BASICO\">BÁSICO</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-success float-right\">Agregar Cliente</button>\r\n                    </form>\r\n                    )  }\r\n                </Mutation>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NuevoCliente;"]},"metadata":{},"sourceType":"module"}